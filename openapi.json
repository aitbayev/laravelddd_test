{
  "openapi": "3.0.3",
  "info": {
    "title": "Cities- OpenAPI 3.0",
    "description": "Just a small tables of cities ",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://localhost:8080/api/cities"
    }
  ],
  "paths": {
    "/cities": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "Gel all existing cities",
        "description": "Get all cities",
        "operationId": "getCities",
        "responses": {
          "200": {
            "description": "City list",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "City not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "city"
        ],
        "summary": "Add a new city",
        "description": "Add a new city",
        "operationId": "addCity",
        "requestBody": {
          "description": "Create a new city",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/City"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/City"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cities/{id}": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "Find city by ID",
        "description": "Returns a single city",
        "operationId": "getCityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of city to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "City not found"
          }
        }
      },
      "post": {
        "tags": [
          "city"
        ],
        "summary": "Updates a city with form data",
        "description": "",
        "operationId": "updateCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of pet that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "city"
        ],
        "summary": "Deletes a city",
        "description": "delete a city",
        "operationId": "deleteCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "City id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operaiton"
          },
          "400": {
            "description": "Invalid city value"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "City": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 10
          },
          "name": {
            "description": "City name",
            "type": "string",
            "example": "Караганда"
          }
        }
      }
    }
  }
}